function validate_params(params)
    % 参数合理性检查
    % 
    % 输入：
    %   params - 参数结构体
    %
    % 功能：
    %   验证所有参数的合理性，不合理的参数会抛出错误
    
    % 网格参数
    assert(params.grid.nelx > 0 && params.grid.nely > 0, ...
        '网格尺寸必须为正整数');
    assert(mod(params.grid.nelx, 1) == 0 && mod(params.grid.nely, 1) == 0, ...
        '网格尺寸必须为整数');
    assert(params.grid.Lx > 0 && params.grid.Ly > 0, ...
        '结构尺寸必须为正数');
    assert(params.grid.dx < params.grid.Lx && params.grid.dy < params.grid.Ly, ...
        '单元尺寸不合理');
    assert(params.grid.h > 0, ...
        '网格特征尺寸h必须为正');
    
    % 优化参数
    assert(params.opt.max_iter > 0 && params.opt.max_iter <= 10000, ...
        '最大迭代次数必须在(0, 10000]范围内');
    assert(params.opt.tol > 0 && params.opt.tol < 1, ...
        '收敛容差必须在(0, 1)范围内');
    assert(params.opt.alpha >= 0 && params.opt.alpha <= 1, ...
        'alpha参数必须在[0, 1]范围内');
    assert(params.opt.delta_theta_max > 0 && params.opt.delta_theta_max < pi, ...
        'delta_theta_max必须在(0, π)范围内');
    
    % 材料参数
    assert(params.material.E_L > params.material.E_T, ...
        '正交各向异性材料：纵向模量应大于横向模量');
    assert(params.material.E_L > 0 && params.material.E_T > 0, ...
        '杨氏模量必须为正');
    assert(params.material.nu_LT > 0 && params.material.nu_LT < 0.5, ...
        '泊松比必须在(0, 0.5)范围内');
    assert(params.material.G_LT > 0, ...
        '剪切模量必须为正');
    assert(params.material.thickness > 0, ...
        '板厚必须为正');
    
    % 水平集参数
    assert(params.levelset.delta_phi_factor > 0 && ...
           params.levelset.delta_phi_factor < 2, ...
        'delta_phi因子应在(0, 2)范围内');
    assert(params.levelset.reinit_freq_early > 0, ...
        '前期重初始化频率必须为正整数');
    assert(params.levelset.reinit_freq_late > 0, ...
        '后期重初始化频率必须为正整数');
    assert(params.levelset.reinit_threshold > 0 && ...
           params.levelset.reinit_threshold < 2, ...
        '重初始化阈值应在(0, 2)范围内');
    assert(params.levelset.reinit_max_interval > 0, ...
        '最大重初始化间隔必须为正');
    
    % 投影参数
    assert(params.projection.omega_early >= 0 && ...
           params.projection.omega_early <= 1, ...
        '前期投影强度必须在[0, 1]范围内');
    assert(params.projection.omega_late >= 0 && ...
           params.projection.omega_late <= 1, ...
        '后期投影强度必须在[0, 1]范围内');
    
    % 平滑参数
    assert(params.smooth.eta > 0 && params.smooth.eta < 0.5, ...
        '平滑系数eta应在(0, 0.5)范围内');
    assert(params.smooth.iterations > 0 && params.smooth.iterations <= 10, ...
        '平滑迭代次数应在(0, 10]范围内');
    
    % 日志级别
    valid_levels = {'DEBUG', 'INFO', 'WARN', 'ERROR'};
    assert(ismember(params.debug.log_level, valid_levels), ...
        '日志级别必须为 DEBUG/INFO/WARN/ERROR 之一');
    
    % 自洽性检查
    assert(params.levelset.transition_iter <= params.opt.max_iter, ...
        '转换迭代次数不应超过最大迭代次数');
    assert(params.levelset.reinit_freq_early <= params.levelset.reinit_freq_late, ...
        '前期重初始化频率应小于等于后期频率');
    
    % 检查点参数
    if params.debug.save_checkpoints
        assert(params.debug.checkpoint_interval > 0, ...
            '检查点保存间隔必须为正整数');
    end
    
    fprintf('✅ 参数验证通过\n');
end

